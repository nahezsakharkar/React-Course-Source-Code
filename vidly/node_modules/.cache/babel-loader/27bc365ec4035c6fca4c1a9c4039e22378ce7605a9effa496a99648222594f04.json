{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NAHEZ SAKHARKAR\\\\OneDrive\\\\Desktop\\\\React Course Source Code\\\\vidly\\\\src\\\\components\\\\movies.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getMovies } from \"./../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./common/pagination\";\nimport { Paginate } from \"./utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const allGeneres = {\n    _id: 0,\n    name: \"All Genres\"\n  };\n  const [selectedGenre, setSelectedGenre] = useState(allGeneres);\n  const [pageSize] = useState(4);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortColumn, setSortColumn] = useState();\n  useEffect(() => {\n    setMovies(getMovies);\n    setGenres([allGeneres, ...getGenres()]);\n  }, []);\n  const filtered = selectedGenre && selectedGenre._id ? movies.filter(m => m.genre._id === selectedGenre._id) : movies;\n  const allMovies = Paginate(filtered, currentPage, pageSize);\n  const handleSort = path => {\n    setSortColumn({\n      path,\n      order: \"asc\"\n    });\n  };\n  const handleDelete = movie => {\n    setMovies(movies.filter(m => m._id !== movie._id));\n  };\n  const handleLike = movie => {\n    const index = movies.indexOf(movie);\n    movies[index].liked = !movies[index].liked;\n    setMovies(movies.map(m => {\n      return m;\n    }));\n  };\n  const handleGenreSelect = genre => {\n    setSelectedGenre(genre);\n    setCurrentPage(1);\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const {\n    length: count\n  } = movies;\n  if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There are No Movies in the Database\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        items: genres,\n        selectedItem: selectedGenre,\n        onItemSelect: handleGenreSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing \", filtered.length, \" Movies in the Database\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n        onDelete: handleDelete,\n        onLike: handleLike,\n        allMovies: allMovies,\n        onSort: handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        itemsCounts: filtered.length,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Movies, \"usiwOE0/CHmOzEZ0AosD7Z7uLwg=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useState","useEffect","getMovies","getGenres","Pagination","Paginate","ListGroup","MoviesTable","Movies","movies","setMovies","genres","setGenres","allGeneres","_id","name","selectedGenre","setSelectedGenre","pageSize","currentPage","setCurrentPage","sortColumn","setSortColumn","filtered","filter","m","genre","allMovies","handleSort","path","order","handleDelete","movie","handleLike","index","indexOf","liked","map","handleGenreSelect","handlePageChange","page","length","count"],"sources":["C:/Users/NAHEZ SAKHARKAR/OneDrive/Desktop/React Course Source Code/vidly/src/components/movies.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getMovies } from \"./../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { Paginate } from \"./utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\n\r\nfunction Movies() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const allGeneres = { _id: 0, name: \"All Genres\" };\r\n  const [selectedGenre, setSelectedGenre] = useState(allGeneres);\r\n  const [pageSize] = useState(4);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [sortColumn, setSortColumn] = useState();\r\n\r\n  useEffect(() => {\r\n    setMovies(getMovies);\r\n    setGenres([allGeneres, ...getGenres()]);\r\n  }, []);\r\n\r\n  const filtered =\r\n    selectedGenre && selectedGenre._id\r\n      ? movies.filter((m) => m.genre._id === selectedGenre._id)\r\n      : movies;\r\n\r\n  const allMovies = Paginate(filtered, currentPage, pageSize);\r\n\r\n  const handleSort = (path) => {\r\n    setSortColumn({ path, order: \"asc\" });\r\n  };\r\n\r\n  const handleDelete = (movie) => {\r\n    setMovies(movies.filter((m) => m._id !== movie._id));\r\n  };\r\n\r\n  const handleLike = (movie) => {\r\n    const index = movies.indexOf(movie);\r\n    movies[index].liked = !movies[index].liked;\r\n    setMovies(\r\n      movies.map((m) => {\r\n        return m;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleGenreSelect = (genre) => {\r\n    setSelectedGenre(genre);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const { length: count } = movies;\r\n\r\n  if (count === 0) return <p>There are No Movies in the Database</p>;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-3\">\r\n        <ListGroup\r\n          items={genres}\r\n          selectedItem={selectedGenre}\r\n          onItemSelect={handleGenreSelect}\r\n        />\r\n      </div>\r\n      <div className=\"col\">\r\n        <p>Showing {filtered.length} Movies in the Database</p>\r\n        <MoviesTable\r\n          onDelete={handleDelete}\r\n          onLike={handleLike}\r\n          allMovies={allMovies}\r\n          onSort={handleSort}\r\n        />\r\n        <Pagination\r\n          itemsCounts={filtered.length}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}