{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NAHEZ SAKHARKAR\\\\OneDrive\\\\Desktop\\\\React Course Source Code\\\\vidly\\\\src\\\\components\\\\movies.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { getMovies } from \"./../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./common/pagination\";\nimport { Paginate } from \"./utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const allGeneres = {\n    _id: 0,\n    name: \"All Genres\"\n  };\n  const [selectedGenre, setSelectedGenre] = useState(allGeneres);\n  const [pageSize] = useState(4);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"title\",\n    order: \"asc\"\n  });\n  useEffect(() => {\n    setMovies(getMovies);\n    setGenres([allGeneres, ...getGenres()]);\n  }, []);\n  const filtered = selectedGenre && selectedGenre._id ? movies.filter(m => m.genre._id === selectedGenre._id) : movies;\n  const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n  const allMovies = Paginate(sorted, currentPage, pageSize);\n  const handleSort = path => {\n    if (sortColumn.path === path) {\n      setSortColumn({\n        path,\n        order: sortColumn.order === \"asc\" ? \"desc\" : \"asc\"\n      });\n    } else {\n      setSortColumn({\n        path,\n        order: \"asc\"\n      });\n    }\n  };\n  const handleDelete = movie => {\n    setMovies(movies.filter(m => m._id !== movie._id));\n  };\n  const handleLike = movie => {\n    const index = movies.indexOf(movie);\n    movies[index].liked = !movies[index].liked;\n    setMovies(movies.map(m => {\n      return m;\n    }));\n  };\n  const handleGenreSelect = genre => {\n    setSelectedGenre(genre);\n    setSearchQuery(\"\");\n    setCurrentPage(1);\n  };\n  const handleSearch = query => {\n    setSearchQuery(query);\n    setSelectedGenre(null);\n    setCurrentPage(1);\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const {\n    length: count\n  } = movies;\n  if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There are No Movies in the Database\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        items: genres,\n        selectedItem: selectedGenre,\n        onItemSelect: handleGenreSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"movies/new\",\n        className: \"btn btn-primary\",\n        style: {\n          marginBottom: 20\n        },\n        children: \"New Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing \", filtered.length, \" Movies in the Database\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"query\",\n        className: \"form-control my-3\",\n        placeholder: \"Search...\",\n        value: value,\n        onChange: e => {\n          onChange(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n        onDelete: handleDelete,\n        onLike: handleLike,\n        allMovies: allMovies,\n        onSort: handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        itemsCounts: filtered.length,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Movies, \"lnbx1A4PTvX21hCcZjk6+QzF+pI=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useState","useEffect","Link","_","getMovies","getGenres","Pagination","Paginate","ListGroup","MoviesTable","Movies","movies","setMovies","genres","setGenres","allGeneres","_id","name","selectedGenre","setSelectedGenre","pageSize","searchQuery","setSearchQuery","currentPage","setCurrentPage","sortColumn","setSortColumn","path","order","filtered","filter","m","genre","sorted","orderBy","allMovies","handleSort","handleDelete","movie","handleLike","index","indexOf","liked","map","handleGenreSelect","handleSearch","query","handlePageChange","page","length","count","marginBottom","value","e","onChange","target"],"sources":["C:/Users/NAHEZ SAKHARKAR/OneDrive/Desktop/React Course Source Code/vidly/src/components/movies.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { getMovies } from \"./../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { Paginate } from \"./utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\n\r\nfunction Movies() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const allGeneres = { _id: 0, name: \"All Genres\" };\r\n  const [selectedGenre, setSelectedGenre] = useState(allGeneres);\r\n  const [pageSize] = useState(4);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [sortColumn, setSortColumn] = useState({ path: \"title\", order: \"asc\" });\r\n\r\n  useEffect(() => {\r\n    setMovies(getMovies);\r\n    setGenres([allGeneres, ...getGenres()]);\r\n  }, []);\r\n\r\n  const filtered =\r\n    selectedGenre && selectedGenre._id\r\n      ? movies.filter((m) => m.genre._id === selectedGenre._id)\r\n      : movies;\r\n\r\n  const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n  const allMovies = Paginate(sorted, currentPage, pageSize);\r\n\r\n  const handleSort = (path) => {\r\n    if (sortColumn.path === path) {\r\n      setSortColumn({\r\n        path,\r\n        order: sortColumn.order === \"asc\" ? \"desc\" : \"asc\",\r\n      });\r\n    } else {\r\n      setSortColumn({\r\n        path,\r\n        order: \"asc\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (movie) => {\r\n    setMovies(movies.filter((m) => m._id !== movie._id));\r\n  };\r\n\r\n  const handleLike = (movie) => {\r\n    const index = movies.indexOf(movie);\r\n    movies[index].liked = !movies[index].liked;\r\n    setMovies(\r\n      movies.map((m) => {\r\n        return m;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleGenreSelect = (genre) => {\r\n    setSelectedGenre(genre);\r\n    setSearchQuery(\"\");\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n    setSelectedGenre(null);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const { length: count } = movies;\r\n\r\n  if (count === 0) return <p>There are No Movies in the Database</p>;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-3\">\r\n        <ListGroup\r\n          items={genres}\r\n          selectedItem={selectedGenre}\r\n          onItemSelect={handleGenreSelect}\r\n        />\r\n      </div>\r\n      <div className=\"col\">\r\n        <Link\r\n          to=\"movies/new\"\r\n          className=\"btn btn-primary\"\r\n          style={{ marginBottom: 20 }}\r\n        >\r\n          New Movie\r\n        </Link>\r\n        <p>Showing {filtered.length} Movies in the Database</p>\r\n        <input type=\"text\" id=\"query\" className=\"form-control my-3\" placeholder=\"Search...\" value={value} onChange={(e) => {onChange(e.target.value)}}/>\r\n        <MoviesTable\r\n          onDelete={handleDelete}\r\n          onLike={handleLike}\r\n          allMovies={allMovies}\r\n          onSort={handleSort}\r\n        />\r\n        <Pagination\r\n          itemsCounts={filtered.length}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}