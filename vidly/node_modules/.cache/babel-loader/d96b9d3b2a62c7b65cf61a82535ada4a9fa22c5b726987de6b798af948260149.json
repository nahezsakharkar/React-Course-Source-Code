{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NAHEZ SAKHARKAR\\\\OneDrive\\\\Desktop\\\\React Course Source Code\\\\vidly\\\\src\\\\components\\\\movies.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { getMovies, deleteMovie } from \"./../services/fakeMovieService\";\nimport { getGenres } from \"../services/genreService\";\nimport Pagination from \"./common/pagination\";\nimport { Paginate } from \"./utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const allGeneres = {\n    _id: 0,\n    name: \"All Genres\"\n  };\n  const [selectedGenre, setSelectedGenre] = useState(allGeneres);\n  const [pageSize] = useState(4);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"title\",\n    order: \"asc\"\n  });\n  async function getAllGenres() {\n    const {\n      data\n    } = await getGenres();\n    setGenres([allGeneres, ...data]);\n  }\n  useEffect(() => {\n    setMovies(getMovies);\n    getAllGenres();\n  }, []);\n  let filtered = movies;\n  if (searchQuery) {\n    filtered = movies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));\n  } else if (selectedGenre && selectedGenre._id) {\n    console.log(selectedGenre);\n    filtered = movies.filter(m => m.genre._id === selectedGenre._id);\n  }\n  const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n  const allMovies = Paginate(sorted, currentPage, pageSize);\n  const handleSort = path => {\n    if (sortColumn.path === path) {\n      setSortColumn({\n        path,\n        order: sortColumn.order === \"asc\" ? \"desc\" : \"asc\"\n      });\n    } else {\n      setSortColumn({\n        path,\n        order: \"asc\"\n      });\n    }\n  };\n  const handleDelete = movie => {\n    deleteMovie(movie._id);\n    // setMovies(movies.filter((m) => m._id !== movie._id));\n  };\n\n  const handleLike = movie => {\n    const index = movies.indexOf(movie);\n    movies[index].liked = !movies[index].liked;\n    setMovies(movies.map(m => {\n      return m;\n    }));\n  };\n  const handleGenreSelect = genre => {\n    setSelectedGenre(genre);\n    setSearchQuery(\"\");\n    setCurrentPage(1);\n  };\n  const handleSearch = query => {\n    setSearchQuery(query);\n    setSelectedGenre(allGeneres);\n    setCurrentPage(1);\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const {\n    length: count\n  } = movies;\n  if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There are No Movies in the Database\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        items: genres,\n        selectedItem: selectedGenre,\n        onItemSelect: handleGenreSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"movies/new\",\n        className: \"btn btn-primary\",\n        style: {\n          marginBottom: 20\n        },\n        children: \"New Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing \", filtered.length, \" Movies in the Database\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"query\",\n        className: \"form-control my-3\",\n        placeholder: \"Search...\",\n        value: searchQuery,\n        onChange: e => {\n          handleSearch(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n        onDelete: handleDelete,\n        onLike: handleLike,\n        allMovies: allMovies,\n        onSort: handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        itemsCounts: filtered.length,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Movies, \"lnbx1A4PTvX21hCcZjk6+QzF+pI=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useState","useEffect","Link","_","getMovies","deleteMovie","getGenres","Pagination","Paginate","ListGroup","MoviesTable","Movies","movies","setMovies","genres","setGenres","allGeneres","_id","name","selectedGenre","setSelectedGenre","pageSize","searchQuery","setSearchQuery","currentPage","setCurrentPage","sortColumn","setSortColumn","path","order","getAllGenres","data","filtered","filter","m","title","toLowerCase","startsWith","console","log","genre","sorted","orderBy","allMovies","handleSort","handleDelete","movie","handleLike","index","indexOf","liked","map","handleGenreSelect","handleSearch","query","handlePageChange","page","length","count","marginBottom","e","target","value"],"sources":["C:/Users/NAHEZ SAKHARKAR/OneDrive/Desktop/React Course Source Code/vidly/src/components/movies.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { getMovies, deleteMovie } from \"./../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { Paginate } from \"./utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\n\r\nfunction Movies() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const allGeneres = { _id: 0, name: \"All Genres\" };\r\n  const [selectedGenre, setSelectedGenre] = useState(allGeneres);\r\n  const [pageSize] = useState(4);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [sortColumn, setSortColumn] = useState({ path: \"title\", order: \"asc\" });\r\n\r\n  async function getAllGenres() {\r\n    const { data } = await getGenres();\r\n    setGenres([allGeneres, ...data]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setMovies(getMovies);\r\n    getAllGenres();\r\n  }, []);\r\n\r\n  let filtered = movies;\r\n  if (searchQuery) {\r\n    filtered = movies.filter((m) =>\r\n      m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n    );\r\n  } else if (selectedGenre && selectedGenre._id) {\r\n    console.log(selectedGenre)\r\n    filtered = movies.filter((m) => m.genre._id === selectedGenre._id);\r\n  }\r\n\r\n  const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n  const allMovies = Paginate(sorted, currentPage, pageSize);\r\n\r\n  const handleSort = (path) => {\r\n    if (sortColumn.path === path) {\r\n      setSortColumn({\r\n        path,\r\n        order: sortColumn.order === \"asc\" ? \"desc\" : \"asc\",\r\n      });\r\n    } else {\r\n      setSortColumn({\r\n        path,\r\n        order: \"asc\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (movie) => {\r\n    deleteMovie(movie._id);\r\n    // setMovies(movies.filter((m) => m._id !== movie._id));\r\n  };\r\n\r\n  const handleLike = (movie) => {\r\n    const index = movies.indexOf(movie);\r\n    movies[index].liked = !movies[index].liked;\r\n    setMovies(\r\n      movies.map((m) => {\r\n        return m;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleGenreSelect = (genre) => {\r\n    setSelectedGenre(genre);\r\n    setSearchQuery(\"\");\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n    setSelectedGenre(allGeneres);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const { length: count } = movies;\r\n\r\n  if (count === 0) return <p>There are No Movies in the Database</p>;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-3\">\r\n        <ListGroup\r\n          items={genres}\r\n          selectedItem={selectedGenre}\r\n          onItemSelect={handleGenreSelect}\r\n        />\r\n      </div>\r\n      <div className=\"col\">\r\n        <Link\r\n          to=\"movies/new\"\r\n          className=\"btn btn-primary\"\r\n          style={{ marginBottom: 20 }}\r\n        >\r\n          New Movie\r\n        </Link>\r\n        <p>Showing {filtered.length} Movies in the Database</p>\r\n        <input\r\n          type=\"text\"\r\n          id=\"query\"\r\n          className=\"form-control my-3\"\r\n          placeholder=\"Search...\"\r\n          value={searchQuery}\r\n          onChange={(e) => {\r\n            handleSearch(e.target.value);\r\n          }}\r\n        />\r\n        <MoviesTable\r\n          onDelete={handleDelete}\r\n          onLike={handleLike}\r\n          allMovies={allMovies}\r\n          onSort={handleSort}\r\n        />\r\n        <Pagination\r\n          itemsCounts={filtered.length}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}